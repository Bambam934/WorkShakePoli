"""
Django settings for WorkShake project.
Generated by 'django-admin startproject' using Django 5.1.6.
"""

import environ
from pathlib import Path
import os
from dotenv import load_dotenv
from supabase import create_client


# Definir la ruta base del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent

# Cargar variables del .env
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Clave secreta de Django
SECRET_KEY = env("SECRET_KEY")

# Seguridad en producci√≥n
DEBUG = True
ALLOWED_HOSTS = ['workshakepoli.onrender.com']
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_URL = '/static/'
# Aplicaciones instaladas
INSTALLED_APPS = [
                
    # apps de Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',   # ‚ë† staticfiles primero
    'channels', 
    
    # apps de tu proyecto
    'WorkShakePoli',
    'FormularioRegistro',
    'FormularioInicioSesion',
    'rest_framework',
    'game',
    'categorias',
    'mptt',
    'perfil',
    'achievements',
    'django_filters',
    'drf_spectacular'
]

#  bloquea la carga de la p√°gina dentro de un iframe
X_FRAME_OPTIONS = 'ALLOWALL'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # üëà Importante
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.TraceIdMiddleware'
]
MIDDLEWARE.insert(1, "WorkShakePoli.middleware.IdempotencyMiddleware")

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "wordshake-local",
    }
}

# Configuraci√≥n de URLs y WSGI
ROOT_URLCONF = 'WorkShakePoli.urls'
WSGI_APPLICATION = 'WorkShakePoli.wsgi.application'


LANGUAGE_CODE = 'es'




# Configuraci√≥n de la base de datos (ya la tienes, pero asegur√©monos de que lee bien las variables)
DATABASES = {
    "default": {
        "ENGINE": env("DB_ENGINE", default="django.db.backends.postgresql"),
        "NAME": env("DB_NAME", default="workshake"),
        "USER": env("DB_USER", default="postgres"),
        "PASSWORD": env("DB_PASSWORD", default="postgres"),
        "HOST": env("DB_HOST", default="127.0.0.1"),
        "PORT": env("DB_PORT", default="5432"),
        # En local NO uses SSL (evita el error de Supabase)
        "OPTIONS": {
            "sslmode": env("SSL_MODE", default="disable"),
        },
    }
}
load_dotenv()
# Configuraci√≥n de Supabase
SUPABASE_URL = env("SUPABASE_URL", default=None)
SUPABASE_KEY = env("SUPABASE_KEY", default=None)

SUPABASE_CLIENT = None

if SUPABASE_URL and SUPABASE_KEY:
    from supabase import create_client
    SUPABASE_CLIENT = create_client(SUPABASE_URL, SUPABASE_KEY)

# Validaci√≥n de contrase√±as
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Configuraci√≥n de idioma y zona horaria
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_URL = '/static/'

# Carpeta global opcional (d√©jala vac√≠a si no usas una)
STATICFILES_DIRS = [
    BASE_DIR / 'static',          #  <proyecto>/static/
]

# Donde `collectstatic` copiar√° todo al desplegar
STATIC_ROOT = BASE_DIR / 'staticfiles'   # por ejemplo
# Configuraci√≥n del correo
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = env("EMAIL_HOST")
EMAIL_PORT = env.int("EMAIL_PORT", default=587)
EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS", default=True)
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")

# Configuraci√≥n de restablecimiento de contrase√±a
PASSWORD_RESET_TIMEOUT = 3600 
PASSWORD_RESET_EMAIL_TEMPLATE_NAME = "registration/password_reset_email.html"
PASSWORD_RESET_SUBJECT_TEMPLATE_NAME = "registration/password_reset_subject.txt"
#Recibir archivos multimedia
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Modelo de usuario personalizado
AUTH_USER_MODEL = 'FormularioRegistro.Registro'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [BASE_DIR / "templates"],  
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
AUTHENTICATION_BACKENDS = [
    'FormularioInicioSesion.backends.EmailAuthBackend',  
    'django.contrib.auth.backends.ModelBackend',  #
]

SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_COOKIE_AGE = 1209600  


BASE_DIR = Path(__file__).resolve().parent.parent  
MEDIA_URL  = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],   
        },
    }
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
    "json": {"()": "pythonjsonlogger.jsonlogger.JsonFormatter"},
    },
    "handlers": {
        "console": {"class": "logging.StreamHandler", "formatter": "json"},
    },
    "root": {"handlers": ["console"], "level": "INFO"},
    "loggers": {
        "channels_redis.core": {"handlers": ["console"], "level": "INFO"},
    },
}
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        # opcional en dev para probar desde el navegador:
        "rest_framework.authentication.SessionAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticatedOrReadOnly",
    ),
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_FILTER_BACKENDS": (
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.OrderingFilter",
        "rest_framework.filters.SearchFilter",
    ),
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.UserRateThrottle",
        "rest_framework.throttling.AnonRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {
        "user": "5/second",
        "anon": "1/second",
    },
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Wordshake Game API",
    "DESCRIPTION": "Fachada REST + eventos (SOA) para Wordshake.",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
}

CELERY_BROKER_URL = env('CELERY_BROKER_URL', default="redis://127.0.0.1:6379/0")
CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND', default="redis://127.0.0.1:6379/1")
CELERY_TASK_ALWAYS_EAGER = False  # en local puedes poner True si no tienes Redis

ALLOWED_HOSTS = ['workshakepoli.onrender.com', '127.0.0.1', 'localhost']

