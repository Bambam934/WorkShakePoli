"""
Django settings for WorkShake project.
Generated by 'django-admin startproject' using Django 5.1.6.
"""

import environ
from pathlib import Path
import os
from dotenv import load_dotenv


# Definir la ruta base del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent

# Cargar variables del .env
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Clave secreta de Django
SECRET_KEY = env("SECRET_KEY")

# Seguridad en producción
DEBUG = True
ALLOWED_HOSTS = []
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
STATIC_URL = '/static/'
# Aplicaciones instaladas
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'WorkShakePoli',
    'FormularioRegistro',
    'FormularioInicioSesion',
    'rest_framework',
    'game',
    'categorias',
    'mptt',
    'perfil'
]

#  bloquea la carga de la página dentro de un iframe
X_FRAME_OPTIONS = 'ALLOWALL'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 👈 Importante
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Configuración de URLs y WSGI
ROOT_URLCONF = 'WorkShakePoli.urls'
WSGI_APPLICATION = 'WorkShakePoli.wsgi.application'

# Configuración de la base de datos
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
        'OPTIONS': {
            'sslmode': env('SSL_MODE', default='prefer'),
            'sslrootcert': env('SSL_ROOT_CERT', default=''),
        },
    }
}

LANGUAGE_CODE = 'es'


# Cargar variables de entorno
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Configuración de la base de datos (ya la tienes, pero asegurémonos de que lee bien las variables)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': env('DB_USER'),
        'PASSWORD': env('DB_PASSWORD'),
        'HOST': env('DB_HOST'),
        'PORT': env('DB_PORT'),
        'OPTIONS': {
            'sslmode': env('SSL_MODE', default='prefer'),
            'sslrootcert': env('SSL_ROOT_CERT', default=''),
        },
    }
}
load_dotenv()
# Configuración de Supabase
SUPABASE_URL = env('SUPABASE_URL')
SUPABASE_KEY = env('SUPABASE_KEY')

from supabase import create_client

SUPABASE_CLIENT = create_client(SUPABASE_URL, SUPABASE_KEY)

# Validación de contraseñas
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Configuración de idioma y zona horaria
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Configuración de archivos estáticos
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'FormularioInicioSesion/static'),
]

# Configuración del correo
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = env("EMAIL_HOST")
EMAIL_PORT = env.int("EMAIL_PORT", default=587)
EMAIL_USE_TLS = env.bool("EMAIL_USE_TLS", default=True)
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")

# Configuración de restablecimiento de contraseña
PASSWORD_RESET_TIMEOUT = 3600 
PASSWORD_RESET_EMAIL_TEMPLATE_NAME = "registration/password_reset_email.html"
PASSWORD_RESET_SUBJECT_TEMPLATE_NAME = "registration/password_reset_subject.txt"
#Recibir archivos multimedia
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Modelo de usuario personalizado
AUTH_USER_MODEL = 'FormularioRegistro.Registro'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [BASE_DIR / "templates"],  
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
AUTHENTICATION_BACKENDS = [
    'FormularioInicioSesion.backends.EmailAuthBackend',  # Nuevo backend
    'django.contrib.auth.backends.ModelBackend',  # Mantener el backend original por si acaso
]

SESSION_ENGINE = "django.contrib.sessions.backends.db"
SESSION_COOKIE_AGE = 1209600  # 2 semanas
